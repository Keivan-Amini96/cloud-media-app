apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"backend","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"backend"}},"template":{"metadata":{"labels":{"app":"backend"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"firebase-config"}}],"image":"gcr.io/p18-18/backend","name":"backend","ports":[{"containerPort":3000}],"readinessProbe":{"httpGet":{"path":"/healthz","port":3000},"initialDelaySeconds":5,"periodSeconds":5},"resources":{"requests":{"cpu":"100m","memory":"256Mi"}}}]}}}}
    creationTimestamp: "2025-04-04T03:17:27Z"
    generation: 1
    name: backend
    namespace: default
    resourceVersion: "42278"
    uid: 62e56183-0973-4171-b72f-5c8e072ad40e
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: backend
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: firebase-config
          image: gcr.io/p18-18/backend
          imagePullPolicy: Always
          name: backend
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-04-04T03:17:52Z"
      lastUpdateTime: "2025-04-04T03:17:52Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-04T03:17:27Z"
      lastUpdateTime: "2025-04-04T03:17:52Z"
      message: ReplicaSet "backend-6c7bd74967" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"App":"db"},"name":"db-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"App":"db"}},"template":{"metadata":{"labels":{"App":"db"}},"spec":{"containers":[{"command":["sh","-c","gcloud beta emulators firestore start --host-port=0.0.0.0:8080"],"env":[{"name":"FIRESTORE_PROJECT_ID","value":"p18-18"},{"name":"FIRESTORE_HOST_PORT","value":"0.0.0.0:8080"}],"image":"google/cloud-sdk","name":"firestore-proxy","ports":[{"containerPort":8080}]}]}}}}
    creationTimestamp: "2025-04-04T02:45:20Z"
    generation: 1
    labels:
      App: db
    name: db-deployment
    namespace: default
    resourceVersion: "19948"
    uid: 4f39683f-0bf3-4601-86c8-09a4b8928923
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        App: db
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          App: db
      spec:
        containers:
        - command:
          - sh
          - -c
          - gcloud beta emulators firestore start --host-port=0.0.0.0:8080
          env:
          - name: FIRESTORE_PROJECT_ID
            value: p18-18
          - name: FIRESTORE_HOST_PORT
            value: 0.0.0.0:8080
          image: google/cloud-sdk
          imagePullPolicy: Always
          name: firestore-proxy
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-04T02:45:22Z"
      lastUpdateTime: "2025-04-04T02:45:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-04T02:45:20Z"
      lastUpdateTime: "2025-04-04T02:45:22Z"
      message: ReplicaSet "db-deployment-75d7bd4dcc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"frontend","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"frontend"}},"template":{"metadata":{"labels":{"app":"frontend"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"firebase-config"}}],"image":"gcr.io/p18-18/frontend","name":"frontend","ports":[{"containerPort":80}],"resources":{"requests":{"cpu":"100m","memory":"256Mi"}}}]}}}}
    creationTimestamp: "2025-04-04T03:17:27Z"
    generation: 3
    name: frontend
    namespace: default
    resourceVersion: "49986"
    uid: 6642b414-8d74-4c93-91e3-f6f767c85182
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-04T03:28:44Z"
        creationTimestamp: null
        labels:
          app: frontend
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: firebase-config
          image: gcr.io/p18-18/frontend
          imagePullPolicy: Always
          name: frontend
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-04-04T03:27:28Z"
      lastUpdateTime: "2025-04-04T03:27:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-04T03:17:27Z"
      lastUpdateTime: "2025-04-04T03:28:55Z"
      message: ReplicaSet "frontend-5cc98d7c5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"App":"nginx"},"name":"nginx-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"App":"nginx"}},"template":{"metadata":{"labels":{"App":"nginx"}},"spec":{"containers":[{"image":"nginx:latest","name":"nginx","ports":[{"containerPort":80}]}]}}}}
    creationTimestamp: "2025-04-04T02:45:21Z"
    generation: 1
    labels:
      App: nginx
    name: nginx-deployment
    namespace: default
    resourceVersion: "19967"
    uid: 7236e54b-4b78-484a-a8f9-215e194bb2c7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        App: nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          App: nginx
      spec:
        containers:
        - image: nginx:latest
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-04T02:45:23Z"
      lastUpdateTime: "2025-04-04T02:45:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-04T02:45:21Z"
      lastUpdateTime: "2025-04-04T02:45:23Z"
      message: ReplicaSet "nginx-deployment-6dc4df87b7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"backend-service","namespace":"default"},"spec":{"ports":[{"port":3000,"protocol":"TCP","targetPort":3000}],"selector":{"app":"backend"}}}
    creationTimestamp: "2025-04-04T03:17:27Z"
    name: backend-service
    namespace: default
    resourceVersion: "41932"
    uid: e7e0fe21-c597-477e-8672-77bf116ee4b7
  spec:
    clusterIP: 34.118.230.160
    clusterIPs:
    - 34.118.230.160
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: backend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"frontend-service","namespace":"default"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"frontend"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-04-04T03:17:27Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    name: frontend-service
    namespace: default
    resourceVersion: "42316"
    uid: 6eb621c8-867c-4d63-bb4c-1f495cb1ef7e
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 34.118.235.94
    clusterIPs:
    - 34.118.235.94
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31967
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: frontend
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 34.139.26.88
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2025-04-04T02:44:04Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "19037"
    uid: 0cb615ea-4932-4bad-8c98-817cd981ec05
  spec:
    clusterIP: 34.118.224.1
    clusterIPs:
    - 34.118.224.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"nginx-service","namespace":"default"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":80}],"selector":{"App":"nginx"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-04-04T02:45:21Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    name: nginx-service
    namespace: default
    resourceVersion: "20362"
    uid: 509dc037-6913-488e-ada5-25ed37ed358c
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 34.118.232.72
    clusterIPs:
    - 34.118.232.72
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32071
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      App: nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 34.73.211.226
        ipMode: VIP
- apiVersion: v1
  data:
    FIREBASE_API_KEY: AIzaSyCyNMs1kclZEIRwKNmFGle-E0uAyikenmw
    FIREBASE_AUTH_DOMAIN: p18-18.firebaseapp.com
    FIREBASE_PROJECT_ID: p18-18
    FIREBASE_STORAGE_BUCKET: p18-18.appspot.com
  kind: ConfigMap
  metadata:
    creationTimestamp: "2025-04-04T03:17:26Z"
    name: firebase-config
    namespace: default
    resourceVersion: "41920"
    uid: bafae71b-3a7d-49de-8aba-06fe508d26a1
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIELTCCApWgAwIBAgIRALmcgBQCs7sXLGTgLhN2pA4wDQYJKoZIhvcNAQELBQAw
      LzEtMCsGA1UEAxMkYjMyNzFjMmQtZjcxZi00YWZmLTg4YTMtYmQ4MzUxMmViOGY4
      MCAXDTI1MDQwNDAxMTM0MloYDzIwNTUwMzI4MDIxMzQyWjAvMS0wKwYDVQQDEyRi
      MzI3MWMyZC1mNzFmLTRhZmYtODhhMy1iZDgzNTEyZWI4ZjgwggGiMA0GCSqGSIb3
      DQEBAQUAA4IBjwAwggGKAoIBgQD23OEVSjw7u1mKh+06xKM0LQ/piemSW1oBqov1
      xXTakjnSKbBiSa3Gp5rrdDQ0FpgbYXDbqyjqPkc5VCCnn6y72/U43Yxv24vvBm/m
      Gzih6ITpNKQQYFeNc1GJpGbwReI17JRF8Z6PSHFXivEDJPTd2Dh1SExeim1e5IcK
      KWAv0mfCUXvQJRjsVtyYwh5o4qkHZzr38pJqb6CDZWNrbc4cLoPlpb1Lm2TWZaO4
      q/VrXjEZ080bH7d3oK7MXou+f6ZzzjoeMg6kmldg46HsuyxFMHsooFA4lsPfdV8s
      hS/HZ+m2olwHFyBcUWB/3nl8zT+1c/uUX8GbSdcz8sAzzQHN7PR0+A7WVLL3+Rld
      G/j3ZGlic1oZLipmPpBH5r4Nvud82bxMUY37osDHy/o1i1WB8xF+ZsvjSuzGsd+f
      h2nYC9aUNIl7kqGmIimDngheBgRnMkfcIaCu/q6El1k3TS5n/DGlDS2Njgpr12Vf
      c93ik142EognYMOQXrPERoXkQx0CAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgIEMA8G
      A1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFN0NJopTl3/13mNLnrxQnZaFV7neMA0G
      CSqGSIb3DQEBCwUAA4IBgQB41qdyM5OIkKg/NqARtUOSFejhwCHhdVU81eorG6bg
      pNgr6jX2jpnDO3cgsj4+zf1E9zd/w6IlMu43KhVEa6dOeIXAHhf4sPvrjeBe2qAf
      zmpwnTV+rP7pOLTD+LgmclnVbrCns1XqCYaUfMiBkpIX181vlFPjg5tmRoArtiuA
      5beQ9Mn3JaT81j8DbqE9lKQv4S/Pr5cVm7NTedL8Akbkn9dkE6LDwo3mRUn9J8tV
      QrZT7+1mHDw3rZ4D1qlfCSu9HNHM3Q7QzlZSpB0i1hvJozHPQONwwkPtexr9U2TF
      y6HttHYaGzNomlykAKwT8mxxBwaJ3jHoA+By1T1PulaoC3wDd/nAPI3c86nkpXAa
      +x9ylfiBBBI1Ml3tZ0sI6nnIJAGTyXzPqZzKuSJkt3duhbfhJHlLgB4rGfK7rxYr
      Fp36nzYQ7A0e+jJtalV0yWEw86KmDFR8MmIOiYAWtpqy5Ne7E/HfjDreUmIzjev7
      kg5rZi7rFgYEmt+2orPOXAY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-04-04T02:17:18Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "253"
    uid: f1929fc3-03f5-47e9-977a-fb8b0c610c4c
kind: List
metadata:
  resourceVersion: ""
